{"version":3,"sources":["Stopwatch.js","Countdown.js","App.js","index.js"],"names":["Stopwatch","state","timerOn","timerStart","timerTime","startTimer","setState","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","this","centiseconds","Math","floor","slice","seconds","minutes","hours","className","onClick","Component","Countdown","newTime","alert","adjustTimer","input","max","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ae88e7e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nclass Stopwatch extends Component {\n    state = {\n        timerOn: false,\n        timerStart: 0,\n        timerTime: 0\n    };\n    \n    startTimer = () => {\n        this.setState({\n            timerOn: true,\n            timerTime: this.state.timerTime,\n            timerStart: Date.now() - this.state.timerTime\n        });\n        this.timer = setInterval(() => {\n            this.setState({\n                timerTime: Date.now() - this.state.timerStart\n            });\n        }, 10);\n    };\n    \n    stopTimer = () => {\n        this.setState({ timerOn: false });\n        clearInterval(this.timer);\n    };\n    \n    resetTimer = () => {\n        this.setState({\n            timerStart: 0,\n            timerTime: 0\n        });\n    };\n    \n    render() {\n        const { timerTime } = this.state;\n        let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n        let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n        let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n        let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n        \n        return (\n            <div className=\"Stopwatch\">\n            <div className=\"Stopwatch-header\">Stopwatch</div>\n            <div className=\"Stopwatch-display\">\n            {hours} : {minutes} : {seconds} : {centiseconds}\n            </div>\n            {this.state.timerOn === false && this.state.timerTime === 0 && (\n                <button onClick={this.startTimer}>Start</button>\n                )}\n                {this.state.timerOn === true && (\n                    <button onClick={this.stopTimer}>Stop</button>\n                    )}\n                    {this.state.timerOn === false && this.state.timerTime > 0 && (\n                        <button onClick={this.startTimer}>Resume</button>\n                        )}\n                        {this.state.timerOn === false && this.state.timerTime > 0 && (\n                            <button onClick={this.resetTimer}>Reset</button>\n                            )}\n                            </div>\n                            );\n                        }\n                    }\n                    export default Stopwatch;","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass Countdown extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0\n  };\n  \n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      const newTime = this.state.timerTime - 10;\n      if (newTime >= 0) {\n        this.setState({\n          timerTime: newTime\n        });\n      } else {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n        alert(\"Countdown ended\");\n      }\n    }, 10);\n  };\n  \n  stopTimer = () => {\n    clearInterval(this.timer);\n    this.setState({ timerOn: false });\n  };\n  resetTimer = () => {\n    if (this.state.timerOn === false) {\n      this.setState({\n        timerTime: this.state.timerStart\n      });\n    }\n  };\n  \n  adjustTimer = input => {\n    const { timerTime, timerOn } = this.state;\n    const max = 216000000;\n    if (!timerOn) {\n      if (input === \"incHours\" && timerTime + 3600000 < max) {\n        this.setState({ timerTime: timerTime + 3600000 });\n      } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n        this.setState({ timerTime: timerTime - 3600000 });\n      } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n        this.setState({ timerTime: timerTime + 60000 });\n      } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n        this.setState({ timerTime: timerTime - 60000 });\n      } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n        this.setState({ timerTime: timerTime + 1000 });\n      } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n        this.setState({ timerTime: timerTime - 1000 });\n      }\n    }\n  }\n  \n  render() {\n    const { timerTime, timerStart, timerOn } = this.state;\n    let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\n    let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor((timerTime / 3600000) % 60)).slice(-2);\n    \n    return (\n      <div className=\"Countdown\">\n      <div className=\"Countdown-header\">Countdown</div>\n      <div className=\"Countdown-label\">Hours : Minutes : Seconds</div>\n      <div className=\"Countdown-display\">\n      <button onClick={() => this.adjustTimer(\"incHours\")}>&#8679;</button>\n      <button onClick={() => this.adjustTimer(\"incMinutes\")}>&#8679;</button>\n      <button onClick={() => this.adjustTimer(\"incSeconds\")}>&#8679;</button>\n      <div className=\"Countdown-time\">\n      {hours} : {minutes} : {seconds}\n      </div>\n      <button onClick={() => this.adjustTimer(\"decHours\")}>&#8681;</button>\n      <button onClick={() => this.adjustTimer(\"decMinutes\")}>&#8681;</button>\n      <button onClick={() => this.adjustTimer(\"decSeconds\")}>&#8681;</button>\n      </div>\n      \n      {timerOn === false &&\n        (timerStart === 0 || timerTime === timerStart) && (\n          <button onClick={this.startTimer}>Start</button>\n          )}\n          {timerOn === true && timerTime >= 1000 && (\n            <button onClick={this.stopTimer}>Stop</button>\n            )}\n            {timerOn === false &&\n              (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0) && (\n                <button onClick={this.startTimer}>Resume</button>\n                )}\n                {(timerOn === false || timerTime < 1000) &&\n                  (timerStart !== timerTime && timerStart > 0) && (\n                    <button onClick={this.resetTimer}>Reset</button>\n                    )}\n                    </div>\n                    );\n                  }\n                }\n                export default Countdown;","import React, { Component } from \"react\";\nimport Stopwatch from \"./Stopwatch\";\nimport Countdown from \"./Countdown\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-title\">Timers Demo</div>\n        <div className=\"Timers\">\n          <Stopwatch />\n          <Countdown />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}